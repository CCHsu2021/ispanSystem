@model IList<MSITTeam1.ViewModels.CQuestionBankViewModel>
@addTagHelper *, MSITTeam1

@{
    ViewData["Title"] = "List";
}

@section Style{
    @*<link href="~/css/SearchBar.css" rel="stylesheet" />*@
    <link rel="stylesheet" href="~/css/fontawesome-all.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css" integrity="sha512-KfkfwYDsLkIlwQp6LFnl8zNdLGxu9YAA1QvwINks4PhcElQSvqcyVLLD9aMhXd13uQjoXtEKNosOWaZqXgel0g==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="stylesheet" href="~/css/QuestionBankStyleSheet.css" />
}
<div class="container" style="padding:40px;">
    <h1>題目列表</h1>
    <p>
        @*<a asp-action="Edit" data-toggle="modal" data-target="#questionEdit">新增</a>*@
        <a asp-action="Create">新增</a>
    </p>

    <div style="margin:20px">
        <form>
            <div class="form-group row justify-content-around py-4">
                <div class="row">
                    <div class="col">
                        <select id="FSubjectId" name="FSubjectId" class="form-control">
                            @*<option value="null">請選擇課程名稱</option>*@
                        </select>
                    </div>
                    <div class="col">
                        <select id="FQuestionTypeId" class="form-control">
                            @*<option value="null">請選擇題型</option>*@
                            <option value="1">單選題</option>
                            <option value="2">多選題</option>
                            <option value="3">填空題</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="input-group input-group-rounded">
                        <input type="text" placeholder="查詢關鍵字" name="keyword" class="form-control" id="keyword">
                        <span class="input-group-btn"><button class="btn btn-primary btn-group-right" type="button" id="search"><i class="fas fa-search"></i></button></span>
                    </div>
                </div>
            </div>
        </form>
    </div>
        <div id="testView" class="card">

        </div>
</div>


<!-- Modal -->
<div class="modal fade" id="questionEdit" tabindex="-1" aria-labelledby="questionEdit" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">題目修改</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @*<vc:question-bank-edit subjectID=@Model.></vc:question-bank-edit>*@
            </div>
        </div>
    </div>
</div>


@section Scripts{
    <script src="https://your-site-or-cdn.com/fontawesome/v6.1.1/js/all.js" data-auto-replace-svg="nest"></script>
    <script>        
        var jsondata = null;
        $(document).ready(function () {        
        $('#search').click(function () {
                jsondata = JSON.stringify({
                    Subjects: $('#FSubjectId').val(),
                    keyword: $('#keyword').val(),
                    Type: $('#FQuestionTypeId').val()
                })
            console.log(jsondata);
            $.ajax({
                url: "@Url.Content("~/QuestionBank/List")",
                type: "POST",
                contentType: "application/json",
                data: jsondata,
                success: function (result) {
                    $('#testView').html(result);
                }
            })
        })
        })
        $('.collapse').collapse()

        const selSubject = document.querySelector('#FSubjectId');

        async function LoadSubject() {
            const responseSubject = await fetch('@Url.Content("~/QuestionBank/Subject")');
            renderSubject(await responseSubject.json());
        }

        LoadSubject();

        function renderSubject(datas) {
            datas.forEach((item) => {
                const opt = new Option(item.fClassCategory, item.fClassCategory);
                selSubject.options.add(opt);
            })
        }
    </script>
}
