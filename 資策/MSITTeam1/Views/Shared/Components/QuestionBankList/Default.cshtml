@model IList<MSITTeam1.ViewModels.CQuestionBankViewModel>
@using System.Collections.Generic;
@addTagHelper *, MSITTeam1

@{
    ViewData["Title"] = "List";
}


<table class="table table-striped table-hover">
    <thead>
        <tr>
            <th class="text-center">選擇</th>
            <th>@Html.DisplayNameFor(model => model[0].FSubjectId)</th>
            <th>@Html.DisplayNameFor(model => model[0].FQuestion)</th>
            <th class="text-center">@Html.DisplayNameFor(model => model[0].FLevel)</th>
            <th class="text-center">編輯</th>
        </tr>
    </thead>
    <tbody class="questionTable">

        @{
            if (Model != null)
            {
                string subject = "";
                int quesId = 0;
                foreach (var item in Model)
                {
                    if (item.FSubjectId != subject || item.FQuestionId != quesId)
                    {
                        subject = item.FSubjectId;
                        quesId = item.FQuestionId;
                        <tr>
                            <td class="text-center">
                                <input type="checkbox" />
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.FSubjectId)
                                <input type="hidden" class="subjectId" value="@Html.DisplayFor(modelItem => item.FSubjectId)" />
                                <input type="hidden" class="questionId" value="@Html.DisplayFor(modelItem => item.FQuestionId)" />
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.FQuestion)
                            </td>
                            <td class="text-center">
                                <input type="hidden" class="quesLevel" value="@Html.DisplayFor(modelItem => item.FLevel)" />
                                <div class="show_rated_3_5"></div>
                            </td>
                            <td class="text-center">
                                @Html.ActionLink("編輯", "Edit", new { subjectID = item.FSubjectId, questionID = (int)item.FQuestionId }) |
                                @*@Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |*@
                                @Html.ActionLink("刪除", "Delete", new { /* id=item.PrimaryKey */ })
                            </td>
                        </tr>
                    }
                }
            }
        }

    </tbody>
</table>
<div id="ProductPagination" class="row my-4"></div>

<script>
    // 難度StarBar
    $('.quesLevel').each(function () {
        var i = $(this).val();
        var temp = "show_rated_" + i;
        $(this).next().attr("class", temp);
    })

    $('.editQuestion').click(function () {
                jsondata = JSON.stringify({
                    Subjects: $(this).parents("tr").find('.subjectId').val(),
                    questionID: $(this).parents("tr").find('.questionId').val()
                })
            //console.log(jsondata);
            $.ajax({
                url: "@Url.Content("~/QuestionBank/Edit")",
                type: "POST",
                contentType: "application/json",
                data: jsondata,
                success: function (result) {
                    $('#EditModal').html(result);
                }
            })
    })

    $(document).ready(function () {
        $(function () {
            initPagination('.questionTable', 12, '#ProductPagination')
        });
    })

    function initPagination(pageEle, showItem, paginationTarget) {
        let pageLength = $(pageEle).length
        let showItemLength = showItem
        let showPage = Math.ceil(pageLength / showItemLength)

        $(paginationTarget).twbsPagination({
            totalPages: showPage,
            visiblePages: 5,
            first: "第一頁",
            prev: "前一頁",
            next: "下一頁",
            last: "最後一頁",
            nextClass: "page-item pageColor",
            prevClass: "page-item pageColor",
            lastClass: "page-item pageColor last",
            firstClass: "page-item pageColor first",
            pageClass: "page-item pageColor",
            activeClass: "page-item pageBG",
            onPageClick: function (event, page) {
            }
        }).on('page', function (event, page) {
            $(pageEle).fadeOut(200)
            let start = (page - 1) * showItemLength
            let end = (page - 1) * showItemLength + showItemLength - 1
            $(pageEle).each((index, item) => {
                if (index >= start && index <= end) {
                    $(item).fadeIn(600)
                }
            })
        });

        $(pageEle).hide()

        pageLength <= showItemLength && $(pageEle).fadeIn(600)
        if (pageLength > showItemLength) {
            $(pageEle).each((index, item) => {
                if (index < showItemLength) {
                    $(item).fadeIn(600)
                }
            })
        }
    }

</script>