@model IList<MSITTeam1.ViewModels.CQuestionBankViewModel>
@using System.Collections.Generic;
@addTagHelper *, MSITTeam1

@{
    ViewData["Title"] = "List";
}


<table class="table table-striped table-hover" id="question">
    <thead>
        <tr>
            <th class="text-center">選擇</th>
            <th>@Html.DisplayNameFor(model => model[0].FSubjectId)</th>
            <th>@Html.DisplayNameFor(model => model[0].FQuestion)</th>
            <th class="text-center">@Html.DisplayNameFor(model => model[0].FLevel)</th>
            <th class="text-center">編輯</th>
        </tr>
    </thead>
    <tbody class="questionTable">

        @{
            if (Model != null)
            {
                string subject = "";
                int quesId = 0;
                foreach (var item in Model)
                {
                    if (item.FSubjectId != subject || item.FQuestionId != quesId)
                    {
                        subject = item.FSubjectId;
                        quesId = item.FQuestionId;
                        <tr>
                            <td class="text-center">
                                <input type="checkbox" onclick="passToPaper(this)"/>
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.FSubjectId)
                                <input type="hidden" name="sub" class="subjectId" value="@Html.DisplayFor(modelItem => item.FSubjectId)" />
                                <input type="hidden" class="questionId" value="@Html.DisplayFor(modelItem => item.FQuestionId)" />
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.FQuestion)
                            </td>
                            <td class="text-center">
                                <input type="hidden" class="quesLevel" value="@Html.DisplayFor(modelItem => item.FLevel)" />
                                <div class="show_rated_3_5"></div>
                            </td>
                            <td class="text-center">
                                <input type="button" data-toggle="modal" data-target="#questionEdit" class="editQuestion" value="編輯"/>
                                @Html.ActionLink("刪除", "Delete","QuestionBank", new { subjectID = item.FSubjectId, questionID = (int)item.FQuestionId }, new { onclick = "return confirm('確定要刪除嗎？')" })
                            </td>
                        </tr>
                    }
                }
            }
        }
        
    </tbody>
</table>
<button id="test">測試</button>
@*<div id="ProductPagination" class="row my-4"></div>*@

<!-- Modal -->
<div class="modal fade modal-dialog-scrollable" id="questionEdit" tabindex="-1" aria-labelledby="questionEdit" aria-hidden="true" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">題目修改</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="EditModal">
                
            </div>
        </div>
    </div>
</div>

<script>
    // 難度StarBar
    $('.quesLevel').each(function () {
        var i = $(this).val();
        var temp = "show_rated_" + i;
        $(this).next().attr("class", temp);
    })

    $(document).ready(function () {
        $(function () {
            initPagination('.questionTable', 12, '#ProductPagination')
        });
    })
    // 題目編輯
    $('.editQuestion').click(function () {
                jsondata = JSON.stringify({
                    Subjects: $(this).parents("tr").find('.subjectId').val(),
                    questionID: $(this).parents("tr").find('.questionId').val()
                })
            $.ajax({
                url: "@Url.Content("~/QuestionBank/EditByVC")",
                type: "POST",
                contentType: "application/json",
                data: jsondata,
                success: function (result) {
                    $('#EditModal').html(result);
                }
            })
    })

    // 題目選取
    var row = [];
    function passToPaper(obj) {
        //var a = $(obj).parent('td').parent('tr');
        //var b = a.find("[name='sub']").text();
        //var c = a.find("[name='sub']").html();
        //console.log(b);
        //console.log(c);
        var currentRow = $(this).closest("tr");
        var col1 = currentRow.find("td:eq(0)").html(); //获得当前和第一个表格单元格TD值
        var col2 = currentRow.find("td:eq(1)").html(); //获得当前和第一个表格单元格TD值
        var col3 = currentRow.find("td:eq(2)").html(); //获得当前和第一个表格单元格TD值
        var data = col1 + "\n" + col2 + "\n" + col3;
        alert(data);
        }

    $('#test').click(function () {
        var set = [];
        $('#question').each(function (index) {
            console.log(index)

            var table = [];
            $(this).find('tr').each(function () {
                var row = [];
                $(this).find('th,td').each(function () {
                    row.push($(this).text().trim());
                });
                table.push(row);
            });

            set.push(table);
        })
        console.log(row);
    })

</script>
<script>

    // 分頁套件
    //function initPagination(pageEle, showItem, paginationTarget) {
        //let pageLength = $(pageEle).length
        //let showItemLength = showItem
        //let showPage = Math.ceil(pageLength / showItemLength)

        //$(paginationTarget).twbsPagination({
        //    totalPages: showPage,
        //    visiblePages: 5,
        //    first: "第一頁",
        //    prev: "前一頁",
        //    next: "下一頁",
        //    last: "最後一頁",
        //    nextClass: "page-item pageColor",
        //    prevClass: "page-item pageColor",
        //    lastClass: "page-item pageColor last",
        //    firstClass: "page-item pageColor first",
        //    pageClass: "page-item pageColor",
        //    activeClass: "page-item pageBG",
        //    onPageClick: function (event, page) {
        //    }
        //}).on('page', function (event, page) {
        //    $(pageEle).fadeOut(200)
        //    let start = (page - 1) * showItemLength
        //    let end = (page - 1) * showItemLength + showItemLength - 1
        //    $(pageEle).each((index, item) => {
        //        if (index >= start && index <= end) {
        //            $(item).fadeIn(600)
        //        }
        //    })
        //});

        //$(pageEle).hide()

        //pageLength <= showItemLength && $(pageEle).fadeIn(600)
        //if (pageLength > showItemLength) {
        //    $(pageEle).each((index, item) => {
        //        if (index < showItemLength) {
        //            $(item).fadeIn(600)
        //        }
        //    })
        //}
    //}

</script>